name: Build

on:
  workflow_dispatch:
    inputs:
      rebuild:
        description: "忽略构建记录以重新构建"
        required: false
        type: boolean
      donotpublish:
        description: "构建后不提交发布新版"
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - projectName: TVBoxOSC
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check New Commit
        run: |
          upStream=https://github.com/${{ github.repository }}
          echo "upStream=$upStream" >> $GITHUB_ENV
          commit=$(curl -sL $upStream/commits/${{ github.ref_name }} | grep -o "/${{ github.repository }}/commit/[a-z0-9]\+" | head -1 | cut -d\/ -f5)
          if ! grep -q "$commit" README.md || [ "${{ inputs.rebuild }}" == "true" ]; then
            echo "commit=$commit" >> $GITHUB_ENV
            echo "commitS=${commit:0:7}" >> $GITHUB_ENV
          fi
      - name: Checkout Source Code
        if: ${{ env.commit }}
        run: |
          git clone ${{ env.upStream }} ${{ matrix.projectName }}
          cd ${{ matrix.projectName }}
          git checkout ${{ env.commit }}
          echo "tag=$(git log --date=format:'%Y%m%d' --pretty=format:%cd ${{ env.commitS }} -1)" >> $GITHUB_ENV
      - name: Extra Modify
        if: ${{ env.commit }}
        working-directory: ${{ matrix.projectName }}
        run: |
          echo '修改 VersionName'
          sed -i "/android:text=/s#=\"#=\"${{ env.tag }}\\\\n\\\\n#" app/src/main/res/layout/dialog_about.xml
          echo 'crosswalk源，防挂'
          if grep -q 'crosswalk' build.gradle; then
            sed -i "/crosswalk/a\        maven { url 'https://o0halflife0o.github.io/crosswalk/releases/crosswalk/android/maven2' }" build.gradle
          else
            sed -i "/jitpack.io/a\        maven { url 'https://o0halflife0o.github.io/crosswalk/releases/crosswalk/android/maven2' }" build.gradle
          fi
      
      - name: Setup Python
        if: ${{ env.commit }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Install Python dependencies
        if: ${{ env.commit }}
        run: |
          python -m pip install --upgrade pip
          pip install lxml ujson pyquery requests jsonpath cachetools pycryptodome beautifulsoup4
      - name: Modify pyramid——build.gradle
        if: ${{ env.commit }}
        working-directory: ${{ matrix.projectName }}
        run: |
          # 替换Windows路径为系统Python路径
          # sed -i "s|buildPython(\"D:/Programs/Python/Python38/python.exe\")|buildPython(\"/usr/bin/python3\")|g" pyramid/build.gradle
          sed -i '/buildPython("D:\/Programs\/Python\/Python38\/python.exe")/d' pyramid/build.gradle
      - name: Setup Python local.properties
        if: ${{ env.commit }}
        working-directory: ${{ matrix.projectName }}
        run: echo "" > local.properties 
      
      - name: Release Apk Sign
        if: ${{ env.commit }}
        working-directory: ${{ matrix.projectName }}
        run: |
          signingConfigs='ICAgIHNpZ25pbmdDb25maWdzIHtcCiAgICAgICAgaWYgKHByb2plY3QuaGFzUHJvcGVydHkoIlJFTEVBU0VfU1RPUkVfRklMRSIpKSB7XAogICAgICAgICAgICBteUNvbmZpZyB7XAogICAgICAgICAgICAgICAgc3RvcmVGaWxlIGZpbGUoUkVMRUFTRV9TVE9SRV9GSUxFKVwKICAgICAgICAgICAgICAgIHN0b3JlUGFzc3dvcmQgUkVMRUFTRV9TVE9SRV9QQVNTV09SRFwKICAgICAgICAgICAgICAgIGtleUFsaWFzIFJFTEVBU0VfS0VZX0FMSUFTXAogICAgICAgICAgICAgICAga2V5UGFzc3dvcmQgUkVMRUFTRV9LRVlfUEFTU1dPUkRcCiAgICAgICAgICAgICAgICB2MVNpZ25pbmdFbmFibGVkIHRydWVcCiAgICAgICAgICAgICAgICB2MlNpZ25pbmdFbmFibGVkIHRydWVcCiAgICAgICAgICAgICAgICBlbmFibGVWM1NpZ25pbmcgPSB0cnVlXAogICAgICAgICAgICAgICAgZW5hYmxlVjRTaWduaW5nID0gdHJ1ZVwKICAgICAgICAgICAgfVwKICAgICAgICB9XAogICAgfVwKXA=='
          signingConfig='ICAgICAgICAgICAgaWYgKHByb2plY3QuaGFzUHJvcGVydHkoIlJFTEVBU0VfU1RPUkVfRklMRSIpKSB7XAogICAgICAgICAgICAgICAgc2lnbmluZ0NvbmZpZyBzaWduaW5nQ29uZmlncy5teUNvbmZpZ1wKICAgICAgICAgICAgfVwK'
          signingConfigs="$(echo "$signingConfigs" |base64 -d )"
          signingConfig="$(echo "$signingConfig" |base64 -d )"
          sed -i -e "/defaultConfig {/i\\$signingConfigs " -e "/debug {/a\\$signingConfig " -e "/release {/a\\$signingConfig " app/build.gradle
          cp -f ${{ github.workspace }}/.github/workflows/${{ matrix.projectName }}.jks app/${{ matrix.projectName }}.jks
          sed -i '$a\RELEASE_STORE_FILE=./${{ matrix.projectName }}.jks'     ./gradle.properties
          sed -i '$a\RELEASE_KEY_ALIAS=${{ matrix.projectName }}'            ./gradle.properties
          sed -i '$a\RELEASE_STORE_PASSWORD=${{ matrix.projectName }}'       ./gradle.properties
          sed -i '$a\RELEASE_KEY_PASSWORD=${{ matrix.projectName }}'         ./gradle.properties
      - name: Check JAVA Version
        if: ${{ env.commit }}
        working-directory: ${{ matrix.projectName }}
        run: |
          setup_java_ver=$(grep -o 'JavaVersion.VERSION_[0-9_]\+' app/build.gradle |head -1 |sed 's/.*_//')
          if [ $setup_java_ver -gt 11 ]; then
            echo "setup_java_ver=$setup_java_ver" >> $GITHUB_ENV
          fi
      - uses: actions/setup-java@v4
        if: ${{ env.setup_java_ver }}
        with:
          distribution: temurin
          java-version: ${{ env.setup_java_ver }}
      - uses: gradle/actions/setup-gradle@v3
        if: ${{ env.commit }}
      - name: Build With Gradle
        if: ${{ env.commit }}
        working-directory: ${{ matrix.projectName }}
        run: |
          chmod +x gradlew
          ./gradlew assemblerelease --build-cache --parallel --daemon --warning-mode all
      - name: Prepare App
        if: ${{ env.commit }}
        working-directory: ${{ matrix.projectName }}
        run: |
          rm -rf apk/
          mkdir -p apk/
          for file in `find ~ -name "TVBox*.apk" -print`; do
            md5sum "$file" | awk '{ print $1 }' > "apk/$(basename $file).md5"
            mv "$file" apk/
          done
      - name: Release Note
        if: ${{ env.commit }}
        working-directory: ${{ matrix.projectName }}
        run: |
          export LESSCHARSET=utf-8
          echo -e "Credit: [${{ github.repository_owner }}](${{ env.upStream }})\nCommit: ${{ env.commit }}\nChangelog:" > apk/${{ github.repository_owner }}-Release.log
          git log --pretty=format:%B ${{ env.commitS }} -1 |sed -e "s# \{2,\}#\n#g" -e "/^Merge \(pull\|branch\|remote\)/d" -e '/^$/d' |cat -n |sort -k2,2 -k1,1n |uniq -f1 |sort -k1,1n |cut -f2- >> apk/${{ github.repository_owner }}-Release.log
      - name: Upload App To Artifact
        uses: actions/upload-artifact@v4
        if: ${{ env.commit }}
        with:
          name: ${{ github.repository_owner }}-${{ github.repository_id }}
          path: |
            ${{ matrix.projectName }}/apk/*
      - name: Whether Or Not to Publish
        if: ${{ inputs.donotpublish && env.commit }}
        run: |
          echo "commit=" >> $GITHUB_ENV
      - name: Release and Upload Assets
        uses: ncipollo/release-action@v1
        if: ${{ env.commit }}
        with:
          name: ${{ env.tag }}
          tag: ${{ env.tag }}
          bodyFile: ${{ matrix.projectName }}/apk/${{ github.repository_owner }}-Release.log
          allowUpdates: true
          removeArtifacts: true
          artifacts: |
            ${{ matrix.projectName }}/apk/*.apk
            ${{ matrix.projectName }}/apk/*.md5
            ${{ matrix.projectName }}/source-${{ env.commitS }}.*
